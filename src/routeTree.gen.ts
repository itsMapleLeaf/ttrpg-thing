/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root"
import { Route as FaviconDotsvgRouteImport } from "./routes/favicon[.]svg"
import { Route as IndexRouteImport } from "./routes/index"
import { Route as ApiImagesOptimizeRouteImport } from "./routes/api/images.optimize"

const FaviconDotsvgRoute = FaviconDotsvgRouteImport.update({
  id: "/favicon.svg",
  path: "/favicon.svg",
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any)
const ApiImagesOptimizeRoute = ApiImagesOptimizeRouteImport.update({
  id: "/api/images/optimize",
  path: "/api/images/optimize",
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/favicon.svg": typeof FaviconDotsvgRoute
  "/api/images/optimize": typeof ApiImagesOptimizeRoute
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/favicon.svg": typeof FaviconDotsvgRoute
  "/api/images/optimize": typeof ApiImagesOptimizeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  "/": typeof IndexRoute
  "/favicon.svg": typeof FaviconDotsvgRoute
  "/api/images/optimize": typeof ApiImagesOptimizeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/favicon.svg" | "/api/images/optimize"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/favicon.svg" | "/api/images/optimize"
  id: "__root__" | "/" | "/favicon.svg" | "/api/images/optimize"
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FaviconDotsvgRoute: typeof FaviconDotsvgRoute
  ApiImagesOptimizeRoute: typeof ApiImagesOptimizeRoute
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/favicon.svg": {
      id: "/favicon.svg"
      path: "/favicon.svg"
      fullPath: "/favicon.svg"
      preLoaderRoute: typeof FaviconDotsvgRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    "/api/images/optimize": {
      id: "/api/images/optimize"
      path: "/api/images/optimize"
      fullPath: "/api/images/optimize"
      preLoaderRoute: typeof ApiImagesOptimizeRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FaviconDotsvgRoute: FaviconDotsvgRoute,
  ApiImagesOptimizeRoute: ApiImagesOptimizeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from "./router.tsx"
import type { createStart } from "@tanstack/react-start"
declare module "@tanstack/react-start" {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
